package libraryapplication;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class QueryForm extends javax.swing.JFrame {
    private Connection connect;
    
    public QueryForm() {
        initComponents();
    }

    public QueryForm(Connection myConnect) {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); 
        setVisible(true); 
        connect = myConnect; 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        RadioPanel = new javax.swing.JPanel();
        FilmsRadio = new javax.swing.JRadioButton();
        ProfitSeanceRadio = new javax.swing.JRadioButton();
        BoxOfficeFilmsPanel = new javax.swing.JPanel();
        Execute = new javax.swing.JButton();
        ScrollResultTable = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Создание отчётов");
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        RadioPanel.setBackground(new java.awt.Color(255, 255, 204));
        RadioPanel.setLayout(new java.awt.GridLayout(0, 1));

        FilmsRadio.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup1.add(FilmsRadio);
        FilmsRadio.setFont(new java.awt.Font("Gungsuh", 0, 14)); // NOI18N
        FilmsRadio.setText("Получить список должников");
        RadioPanel.add(FilmsRadio);

        ProfitSeanceRadio.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup1.add(ProfitSeanceRadio);
        ProfitSeanceRadio.setFont(new java.awt.Font("Gungsuh", 0, 14)); // NOI18N
        ProfitSeanceRadio.setText("Прибыль с продажи книг");
        RadioPanel.add(ProfitSeanceRadio);

        BoxOfficeFilmsPanel.setBackground(new java.awt.Color(255, 255, 204));
        BoxOfficeFilmsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        Execute.setFont(new java.awt.Font("Gungsuh", 1, 14)); // NOI18N
        Execute.setText("Выполнить");
        Execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuteActionPerformed(evt);
            }
        });
        BoxOfficeFilmsPanel.add(Execute);

        RadioPanel.add(BoxOfficeFilmsPanel);

        getContentPane().add(RadioPanel);

        ScrollResultTable.setBackground(new java.awt.Color(255, 255, 204));

        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ScrollResultTable.setViewportView(ResultTable);

        getContentPane().add(ScrollResultTable);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteActionPerformed
        // TODO add your handling code here:
        Date dateNow = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        // далее следует выбор из вариантов, доступных для исполнения пользовательского запроса
        if(buttonGroup1.isSelected(FilmsRadio.getModel())) { // выбор элемента отображения фильма
            ResultTable.setModel(createCustomModel("SELECT b.name_book \"Название книги\","
                    + " b.author_book \"Автор книги\", ('2022-06-09' - ib.return_date) \"Кол-во дней просрочки\","
                    + " r.full_name \"Должник\" FROM issuingbook ib "
                    + "INNER JOIN books b ON b.book_id = ib.book_id "
                    + "INNER JOIN readers r ON r.readers_id = ib.reader_id "
                    + "WHERE return_date < '2022-06-09'"));
        }
        if(buttonGroup1.isSelected(ProfitSeanceRadio.getModel())) { // выбор элемента отображения сеанса
            ResultTable.setModel(createCustomModel("SELECT b.name_book \"Название книги\","
                    + " b.author_book \"Автор книги\", COUNT(b.book_id) \"Кол-во проданных экземпляров\","
                    + " SUM(b.cost_book) \"Прибыль\" FROM issuingbook ib "
                    + "INNER JOIN books b ON b.book_id = ib.book_id "
                    + "INNER JOIN readers r ON r.readers_id = ib.reader_id "
                    + "GROUP BY b.book_id"));
        }
    }//GEN-LAST:event_ExecuteActionPerformed

    public DefaultTableModel createCustomModel(String query) { 
        DefaultTableModel model = new DefaultTableModel(); 
        model.setRowCount(0); 
        model.setColumnCount(0);
        try { 
            Statement stmt = connect.createStatement(); 
            // основное отличие от метода createModel в исполнении запроса, 
            // который поступает вторым по счету параметром. 
            ResultSet rs = stmt.executeQuery(query); 
            ResultSetMetaData md = rs.getMetaData(); 
            // далее происходит определение и добавление в модель наименований столбцов 
            for(int i=1;i<=md.getColumnCount();i++) { 
                model.addColumn(md.getColumnName(i)); 
            } 
            while(rs.next()){ 
            // построчное заполнение модели 
                ArrayList<Object> mass = new ArrayList(); 
                for(int i=1;i<=md.getColumnCount();i++) { 
                    mass.add(rs.getObject(i)); 
                } 
                model.addRow(mass.toArray()); 
            } 
            return model; 
        } 
        catch (Exception e) { 
            JOptionPane.showMessageDialog(this, "Internal error!"); 
            return null; 
        } 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QueryForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BoxOfficeFilmsPanel;
    private javax.swing.JButton Execute;
    private javax.swing.JRadioButton FilmsRadio;
    private javax.swing.JRadioButton ProfitSeanceRadio;
    private javax.swing.JPanel RadioPanel;
    private javax.swing.JTable ResultTable;
    private javax.swing.JScrollPane ScrollResultTable;
    private javax.swing.ButtonGroup buttonGroup1;
    // End of variables declaration//GEN-END:variables
}
