package libraryapplication;

import databaselayer.Const;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class PersonalAccountController extends javax.swing.JFrame {
    private Connection dbconnect;
    public EditBook editBook;
    public EditReader editReader;
    public AddBook addBook;
    public AddReader addReader;
    public FindBook findBook;
    public FindReader findReader;
    
    public PersonalAccountController() {
        initComponents();
    }
    
    public PersonalAccountController(Connection myConnect, String firstName,
            String lastName, String patronymic){
        initComponents(); 
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); 
        setVisible(true); 
        dbconnect = myConnect;
        LabelFullname.setText(firstName + " " + lastName.substring(0, 1) + "." + patronymic.substring(0, 1) + ".");
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) throws SQLException {  
        dbconnect.close();
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DataPanel = new javax.swing.JPanel();
        LabelWelcomeText = new javax.swing.JLabel();
        LabelFullname = new javax.swing.JLabel();
        EditPanel = new javax.swing.JPanel();
        Show = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        Find = new javax.swing.JButton();
        Query = new javax.swing.JButton();
        SelectTable = new javax.swing.JComboBox<>();
        TablePanelAll = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableView1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableView2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Библиотечный фонд \"ОмГТУ\"");
        setPreferredSize(new java.awt.Dimension(950, 450));
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        DataPanel.setBackground(new java.awt.Color(255, 255, 204));
        DataPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DataPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

        LabelWelcomeText.setFont(new java.awt.Font("GungsuhChe", 0, 18)); // NOI18N
        LabelWelcomeText.setText("Добро пожаловать - ");
        DataPanel.add(LabelWelcomeText);

        LabelFullname.setFont(new java.awt.Font("GungsuhChe", 1, 18)); // NOI18N
        DataPanel.add(LabelFullname);

        getContentPane().add(DataPanel);

        EditPanel.setBackground(new java.awt.Color(255, 255, 204));
        EditPanel.setLayout(new javax.swing.BoxLayout(EditPanel, javax.swing.BoxLayout.LINE_AXIS));

        Show.setFont(new java.awt.Font("Gungsuh", 0, 12)); // NOI18N
        Show.setText("Отображение");
        Show.setMaximumSize(new java.awt.Dimension(90, 25));
        Show.setMinimumSize(new java.awt.Dimension(90, 25));
        Show.setPreferredSize(new java.awt.Dimension(90, 25));
        Show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowActionPerformed(evt);
            }
        });
        EditPanel.add(Show);

        Add.setFont(new java.awt.Font("Gungsuh", 0, 12)); // NOI18N
        Add.setText("Добавление");
        Add.setMaximumSize(new java.awt.Dimension(90, 25));
        Add.setMinimumSize(new java.awt.Dimension(90, 25));
        Add.setPreferredSize(new java.awt.Dimension(90, 25));
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        EditPanel.add(Add);

        Edit.setFont(new java.awt.Font("Gungsuh", 0, 12)); // NOI18N
        Edit.setText("Редактирование");
        Edit.setMaximumSize(new java.awt.Dimension(90, 25));
        Edit.setMinimumSize(new java.awt.Dimension(90, 25));
        Edit.setPreferredSize(new java.awt.Dimension(90, 25));
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        EditPanel.add(Edit);

        Delete.setFont(new java.awt.Font("Gungsuh", 0, 12)); // NOI18N
        Delete.setText("Удаление");
        Delete.setMaximumSize(new java.awt.Dimension(90, 25));
        Delete.setMinimumSize(new java.awt.Dimension(90, 25));
        Delete.setPreferredSize(new java.awt.Dimension(90, 25));
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        EditPanel.add(Delete);

        Clear.setFont(new java.awt.Font("Gungsuh", 0, 12)); // NOI18N
        Clear.setText("Очистка");
        Clear.setMaximumSize(new java.awt.Dimension(90, 25));
        Clear.setMinimumSize(new java.awt.Dimension(90, 25));
        Clear.setPreferredSize(new java.awt.Dimension(90, 25));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        EditPanel.add(Clear);

        Find.setFont(new java.awt.Font("Gungsuh", 0, 12)); // NOI18N
        Find.setText("Поиск");
        Find.setMaximumSize(new java.awt.Dimension(90, 25));
        Find.setMinimumSize(new java.awt.Dimension(90, 25));
        Find.setPreferredSize(new java.awt.Dimension(90, 25));
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });
        EditPanel.add(Find);

        Query.setFont(new java.awt.Font("Gungsuh", 0, 12)); // NOI18N
        Query.setText("Отчёты");
        Query.setMaximumSize(new java.awt.Dimension(90, 25));
        Query.setMinimumSize(new java.awt.Dimension(90, 25));
        Query.setPreferredSize(new java.awt.Dimension(90, 25));
        Query.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueryActionPerformed(evt);
            }
        });
        EditPanel.add(Query);

        SelectTable.setFont(new java.awt.Font("Gungsuh", 0, 14)); // NOI18N
        SelectTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Книги", "Читатели" }));
        EditPanel.add(SelectTable);

        getContentPane().add(EditPanel);

        TablePanelAll.setBackground(new java.awt.Color(255, 255, 204));
        TablePanelAll.setLayout(new java.awt.GridLayout(1, 1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Книги", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Gungsuh", 0, 18))); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 204));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(450, 300));

        TableView1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(TableView1);

        jPanel1.add(jScrollPane1);

        TablePanelAll.add(jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Читатели", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Gungsuh", 0, 18))); // NOI18N

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 204));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(450, 300));

        TableView2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(TableView2);

        jPanel2.add(jScrollPane2);

        TablePanelAll.add(jPanel2);

        getContentPane().add(TablePanelAll);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowActionPerformed
        // TODO add your handling code here:
        TableView1.setModel(createModel(Const.BOOKS_TABLE));
        TableView2.setModel(createModel(Const.READERS_TABLE));
    }//GEN-LAST:event_ShowActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        switch(this.SelectTable.getSelectedIndex()) {
            // по аналогии с функцией удаления записей из БД определим рабочую таблицу
            case 0: // вызов соответствующей рабочей таблицы формы
                addBook = new AddBook(dbconnect); break;
            case 1: addReader = new AddReader(dbconnect); break;
        }
    }//GEN-LAST:event_AddActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        int[] select = null;
        String id = null;
        switch(this.SelectTable.getSelectedIndex()) { // определяем рабочую таблицу
            case 0: 
                try { select = TableView1.getSelectedRows(); // определяем строку для редактирования
                id = TableView1.getModel().getValueAt(select[0], 0).toString();
                // так как в таблице в первой колонке размещен id записи, то после его определения
                // передадим его и текущее соединение с БД в конструктор формы для редактирования
                editBook = new EditBook(dbconnect, id); }
                catch (Exception e) { JOptionPane.showMessageDialog(this, 
                        " Выбирите строку таблицы Книги для редактирования \n "
                                + " Select row table Books for edit!"); }
                break;
            case 1: try { select = TableView2.getSelectedRows();
                id = TableView2.getModel().getValueAt(select[0], 0).toString();
                editReader = new EditReader(dbconnect, id); }
                catch (Exception e) { JOptionPane.showMessageDialog(this, 
                        " Выбирите строку таблицы Читатели для редактирования \n "
                                + " Select row table Readers for edit!"); }
                break;
        }
    }//GEN-LAST:event_EditActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int numOfTable = SelectTable.getSelectedIndex();
        // определим массив с номерами для обеспечения возможности удаления нескольких строк
        int select[] = null;
        switch(numOfTable) { // далее в зависимости от выбранной таблицы определяем, какие строки выделены для удаления:
            case 0: select = TableView1.getSelectedRows(); break;
            case 1: select = TableView2.getSelectedRows(); break;
        }
        String query;
        Statement stmt = null;
        try{
            stmt = dbconnect.createStatement();
            switch(numOfTable) { // также в зависимости от выбранной таблицы сформируем запрос к СУБД на удаление записей БД
                case 0: for(int i=0;i<select.length;i++) {
                    // организуем цикл для удаления всех выделенных строк
                    query = "DELETE FROM " + Const.BOOKS_TABLE + " WHERE " + Const.BOOKS_ID 
                            + "=" + TableView1.getModel().getValueAt(select[i], 0).toString();
                    stmt.execute(query);
                }
                break;
                case 1: for(int i=0;i<select.length;i++) {
                    // организуем цикл для удаления всех выделенных строк
                    query = "DELETE FROM " + Const.READERS_TABLE + " WHERE " + Const.READERS_ID 
                            + "=" + TableView2.getModel().getValueAt(select[i], 0).toString();
                    stmt.execute(query);
                }
                break;
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Error!");
        } //  выводим сообщение об ошибке при возникновении исключительной ситуации
    }//GEN-LAST:event_DeleteActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        TableView1.setModel(new DefaultTableModel(0, 0));
        TableView2.setModel(new DefaultTableModel(0, 0));
    }//GEN-LAST:event_ClearActionPerformed

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
        // TODO add your handling code here:
        switch(this.SelectTable.getSelectedIndex()) {
            case 0: findBook = new FindBook(dbconnect, TableView1); break;
            case 1: findReader = new FindReader(dbconnect, TableView2); break;
        }
    }//GEN-LAST:event_FindActionPerformed

    private void QueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QueryActionPerformed
        // TODO add your handling code here:
        QueryForm query = new QueryForm(dbconnect);
    }//GEN-LAST:event_QueryActionPerformed

    public DefaultTableModel createModel(String name) { 
        DefaultTableModel model = new DefaultTableModel(); // создаем табличную модель
        model.setRowCount(0); // обнуляем строки и столбцы 
        model.setColumnCount(0); 
        try { 
            Statement stmt = dbconnect.createStatement(); 
            ResultSet rs = stmt.executeQuery("SELECT * FROM " + name); // формируем и направляем запрос к БД на выборку данных из указанной таблицы. 
            ResultSetMetaData md = rs.getMetaData(); 
            for(int i=1;i<=md.getColumnCount();i++) { // получим наименования колонок данной таблицы в БД и занесем их в текущую модель 
                model.addColumn(md.getColumnName(i)); 
            } 
            while(rs.next()){ // пока поступают данные, сформируем массив элементов каждой строки таблицы 
                ArrayList<Object> mass = new ArrayList(); 
                for(int i=1;i<=md.getColumnCount();i++) { 
                    mass.add(rs.getObject(i));
                }
                model.addRow(mass.toArray()); 
            } 
            return model; 
        } catch (Exception e) { // исключение при возникновении ошибки 
            JOptionPane.showMessageDialog(this, "Internal error!");  
            return null; 
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonalAccountController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonalAccountController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonalAccountController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonalAccountController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonalAccountController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Clear;
    private javax.swing.JPanel DataPanel;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JPanel EditPanel;
    private javax.swing.JButton Find;
    private javax.swing.JLabel LabelFullname;
    private javax.swing.JLabel LabelWelcomeText;
    private javax.swing.JButton Query;
    private javax.swing.JComboBox<String> SelectTable;
    private javax.swing.JButton Show;
    private javax.swing.JPanel TablePanelAll;
    private javax.swing.JTable TableView1;
    private javax.swing.JTable TableView2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
